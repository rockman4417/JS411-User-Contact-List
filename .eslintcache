[{"C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\index.js":"1","C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\App.js":"2","C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\reportWebVitals.js":"3","C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\ContactCard.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1366,"mtime":1611182195866,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1848,"mtime":1611178206113,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1ycz4w",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\index.js",[],["20","21"],"C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\App.js",[],"C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\reportWebVitals.js",[],"C:\\Users\\Chris\\devFolder\\user-contact-list\\src\\ContactCard.js",["22","23","24"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n\r\nexport default function ContactCard(props) {\r\n\r\n    const styles = {\r\n        display: 'flex', \r\n        alignItems: \"center\", \r\n        justifyContent: 'center', \r\n        flexWrap: 'wrap', \r\n        border: '1px solid white'\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const { nameFirst, nameLast, locationStreet, locationState, locationCity, locationCountry, email, phone, cell, picture } = props\r\n    const [isHidden, setHidden] = useState(true)\r\n\r\n    function handleHiddenClick() {\r\n        if(isHidden) {\r\n          setHidden(false)\r\n        } else {\r\n          setHidden(true)\r\n        }\r\n      }\r\n\r\n      if(!isHidden) {\r\n        return (\r\n            <li style={styles} >\r\n            <img style={{ height: '200px' }} src={picture} alt={''}></img>\r\n            <h2>{nameFirst} {nameLast}</h2>\r\n            <h3>cell: {cell}</h3>\r\n            <h3>email: {email}</h3>\r\n            <h3>location: {locationState}, {locationCountry}</h3>\r\n            <Button style={{backgroundColor: 'green'}} size='large' className={classes.margin} onClick={handleHiddenClick}>Show Info</Button>\r\n            </li>\r\n            \r\n        ) \r\n      } else {\r\n        return (\r\n            <li style={styles}>\r\n            <img style={{ height: '200px' }} src={picture} alt={''}></img>\r\n            <h2>{nameFirst} {nameLast}</h2>\r\n            \r\n            <Button style={{backgroundColor: 'green'}} size='large' className={classes.margin} onClick={handleHiddenClick}>Show Info</Button>\r\n\r\n            </li>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":27,"column":34,"nodeType":"31","messageId":"32","endLine":27,"endColumn":48},{"ruleId":"29","severity":1,"message":"33","line":27,"column":65,"nodeType":"31","messageId":"32","endLine":27,"endColumn":77},{"ruleId":"29","severity":1,"message":"34","line":27,"column":103,"nodeType":"31","messageId":"32","endLine":27,"endColumn":108},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'locationStreet' is assigned a value but never used.","Identifier","unusedVar","'locationCity' is assigned a value but never used.","'phone' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]